import aiohttp
from config import OPENWEATHER_API_KEY, OPENWEATHER_BASE_URL
from collections import defaultdict
from datetime import datetime

async def get_current_weather(city: str, lang: str = "uk") -> str:
    """–ó–∞–ø–∏—Ç—É—î –ø–æ—Ç–æ—á–Ω—É –ø–æ–≥–æ–¥—É –≤ –º—ñ—Å—Ç—ñ."""
    url = f"{OPENWEATHER_BASE_URL}/weather"
    params = {
        "q": city,
        "appid": OPENWEATHER_API_KEY,
        "units": "metric",
        "lang": lang
    }
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url, params=params, timeout=10) as response:
                data = await response.json()
                if response.status != 200:
                    return f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞: {data.get('message', '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–≥–æ–¥—É. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∫–ª—é—á API –∞–±–æ –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞.')}"
                weather_desc = data["weather"][0]["description"].capitalize()
                temp = data["main"]["temp"]
                feels_like = data["main"]["feels_like"]
                humidity = data["main"]["humidity"]
                wind_speed = data["wind"]["speed"]

                # –î–æ–¥–∞—î–º–æ –µ–º–æ–¥–∑—ñ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ø–æ–≥–æ–¥–∏
                weather_emoji = "‚òÄÔ∏è" if "—á–∏—Å—Ç–µ –Ω–µ–±–æ" in weather_desc.lower() else "‚òÅÔ∏è" if "—Ö–º–∞—Ä–∏" in weather_desc.lower() else "üå¶Ô∏è" if "–¥–æ—â" in weather_desc.lower() else "‚õÖ"
                temp_emoji = "üî•" if temp > 28 else "üåû" if temp > 24 else "üòé"
                feels_emoji = "ü•µ" if feels_like > 28 else "üòì" if feels_like > 24 else "üòä"
                humidity_emoji = "üåßÔ∏è" if humidity > 60 else "üí¶"
                wind_emoji = "üå¨Ô∏è" if wind_speed > 5 else "üçÉ"

                # –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç —ñ–∑ –µ–º–æ–¥–∑—ñ
                weather_text = (
                    f"üå§ **–ü–æ–≥–æ–¥–∞ –≤ –º—ñ—Å—Ç—ñ *{city.title()}* üåÜ**:\n\n"
                    f"{weather_emoji} ‚Ä¢ **{weather_desc}**\n"
                    f"üå°Ô∏è ‚Ä¢ **–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞**: {temp}¬∞C {temp_emoji}\n"
                    f"{feels_emoji} ‚Ä¢ **–í—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫**: {feels_like}¬∞C\n"
                    f"üíß ‚Ä¢ **–í–æ–ª–æ–≥—ñ—Å—Ç—å**: {humidity}% {humidity_emoji}\n"
                    f"üí® ‚Ä¢ **–í—ñ—Ç–µ—Ä**: {wind_speed} –º/—Å {wind_emoji}\n"
                )

                # –î–æ–¥–∞—î–º–æ —Ü—ñ–∫–∞–≤–∏–π –≤–∏—Å–Ω–æ–≤–æ–∫
                if temp > 28:
                    conclusion = f"**–í–∏—Å–Ω–æ–≤–æ–∫**: –°–ø–µ–∫–æ—Ç–Ω–∏–π –¥–µ–Ω—å —É {city.title()}! üî• –ß–∞—Å –¥–ª—è –ø—Ä–æ—Ö–æ–ª–æ–¥–Ω–∏—Ö –Ω–∞–ø–æ—ó–≤ ü•§ —ñ –ª–µ–≥–∫–æ–≥–æ –æ–¥—è–≥—É üëï. –ù–µ –∑–∞–±—É–¥—å —Å–æ–Ω—Ü–µ–∑–∞—Ö–∏—Å–Ω–∏–π –∫—Ä–µ–º! üß¥"
                elif temp > 24:
                    conclusion = f"**–í–∏—Å–Ω–æ–≤–æ–∫**: –¢–µ–ø–ª–æ —ñ –ø—Ä–∏—î–º–Ω–æ —É {city.title()}! üåû –Ü–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ–≥—É–ª—è–Ω–∫–∏ –ø–∞—Ä–∫–æ–º üå≥ —á–∏ –ø—ñ–∫–Ω—ñ–∫–∞ üçâ."
                else:
                    conclusion = f"**–í–∏—Å–Ω–æ–≤–æ–∫**: –ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞ –ø–æ–≥–æ–¥–∞ —É {city.title()}! üòé –ß—É–¥–æ–≤–∏–π –¥–µ–Ω—å –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É üö¥‚Äç‚ôÄÔ∏è —á–∏ –∑–∞—Ç–∏—à–Ω–æ–≥–æ —á–∞—é–≤–∞–Ω–Ω—è ‚òï."

                if humidity > 60:
                    conclusion += " –ê–ª–µ –≤–æ–ª–æ–≥—ñ—Å—Ç—å –≤–∏—Å–æ–∫–∞, —Ç–æ–∂ –±–µ—Ä–∏ –ø–∞—Ä–∞—Å–æ–ª—å–∫—É –Ω–∞ –≤—Å—è–∫ –≤–∏–ø–∞–¥–æ–∫! ‚òÇÔ∏è"

                return weather_text + "\n" + conclusion
    except aiohttp.ClientError as e:
        return f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å–µ—Ä–≤—ñ—Å—É –ø–æ–≥–æ–¥–∏: {str(e)}"

async def get_forecast_5days(city: str, lang: str = "uk") -> str:
    """–ó–∞–ø–∏—Ç—É—î 5-–¥–µ–Ω–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ —ñ –≥—Ä—É–ø—É—î –¥–∞–Ω—ñ –∑–∞ –¥–Ω—è–º–∏."""
    url = f"{OPENWEATHER_BASE_URL}/forecast"
    params = {
        "q": city,
        "appid": OPENWEATHER_API_KEY,
        "units": "metric",
        "lang": lang
    }
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url, params=params, timeout=10) as response:
                data = await response.json()
                if response.status != 200:
                    return f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞: {data.get('message', '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∫–ª—é—á API –∞–±–æ –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞.')}"
                forecast_list = data.get("list", [])
                if not forecast_list:
                    return "‚ö†Ô∏è –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –ø—Ä–æ–≥–Ω–æ–∑—É."

                grouped = defaultdict(list)
                for entry in forecast_list:
                    date = entry["dt_txt"].split(" ")[0]
                    grouped[date].append(entry)

                days = sorted(grouped.keys())
                lines = [f"üìÖ **–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ –Ω–∞ 5 –¥–Ω—ñ–≤ —É *{city.title()}* üåü**:\n"]
                avg_temps = []
                rainy_days = 0
                for day in days[:5]:
                    entries = grouped[day]
                    chosen = next((entry for entry in entries if "12:00:00" in entry["dt_txt"]), entries[0])
                    dt_obj = datetime.strptime(day, "%Y-%m-%d")
                    formatted_date = dt_obj.strftime("%d.%m.%Y")
                    desc = chosen["weather"][0]["description"].capitalize()
                    temp = chosen["main"]["temp"]
                    temp_min = chosen["main"]["temp_min"]
                    temp_max = chosen["main"]["temp_max"]
                    wind_speed = chosen["wind"]["speed"]
                    humidity = chosen["main"]["humidity"]

                    # –î–æ–¥–∞—î–º–æ –µ–º–æ–¥–∑—ñ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑—É
                    weather_emoji = "‚òÄÔ∏è" if "—á–∏—Å—Ç–µ –Ω–µ–±–æ" in desc.lower() else "‚òÅÔ∏è" if "—Ö–º–∞—Ä–∏" in desc.lower() else "üå¶Ô∏è" if "–¥–æ—â" in desc.lower() else "‚õÖ"
                    temp_emoji = "üî•" if temp > 28 else "üåû" if temp > 24 else "üòé"
                    humidity_emoji = "üåßÔ∏è" if humidity > 60 else "üí¶"
                    wind_emoji = "üå¨Ô∏è" if wind_speed > 5 else "üçÉ"

                    lines.append(
                        f"üìç **{formatted_date}** üóìÔ∏è\n"
                        f"{weather_emoji} ‚Ä¢ **{desc}**\n"
                        f"üå°Ô∏è ‚Ä¢ **–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞**: {temp}¬∞C (–º—ñ–Ω: {temp_min}¬∞C, –º–∞–∫—Å: {temp_max}¬∞C) {temp_emoji}\n"
                        f"üíß ‚Ä¢ **–í–æ–ª–æ–≥—ñ—Å—Ç—å**: {humidity}% {humidity_emoji}\n"
                        f"üí® ‚Ä¢ **–í—ñ—Ç–µ—Ä**: {wind_speed} –º/—Å {wind_emoji}\n"
                    )
                    avg_temps.append(temp)
                    if "–¥–æ—â" in desc.lower():
                        rainy_days += 1

                # –î–æ–¥–∞—î–º–æ —Ü—ñ–∫–∞–≤–∏–π –≤–∏—Å–Ω–æ–≤–æ–∫ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑—É
                avg_temp = sum(avg_temps) / len(avg_temps)
                if avg_temp > 28:
                    conclusion = f"**–í–∏—Å–Ω–æ–≤–æ–∫ –¥–ª—è {city.title()}**: –°–ø–µ–∫–æ—Ç–Ω–∏–π —Ç–∏–∂–¥–µ–Ω—å –ø–æ–ø–µ—Ä–µ–¥—É! üî• –ß—É–¥–æ–≤–∏–π —á–∞—Å –¥–ª—è –ø—ñ–∫–Ω—ñ–∫—ñ–≤ üçâ —ñ –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É –Ω–∞ –ø—Ä–∏—Ä–æ–¥—ñ üå≥."
                elif avg_temp > 24:
                    conclusion = f"**–í–∏—Å–Ω–æ–≤–æ–∫ –¥–ª—è {city.title()}**: –¢–µ–ø–ª–∏–π —ñ –ø—Ä–∏—î–º–Ω–∏–π —Ç–∏–∂–¥–µ–Ω—å! üåû –Ü–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ–≥—É–ª—è–Ω–æ–∫ üö∂‚Äç‚ôÄÔ∏è —ñ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É üö¥‚Äç‚ôÄÔ∏è."
                else:
                    conclusion = f"**–í–∏—Å–Ω–æ–≤–æ–∫ –¥–ª—è {city.title()}**: –ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞ –ø–æ–≥–æ–¥–∞ –Ω–∞ –≤–µ—Å—å —Ç–∏–∂–¥–µ–Ω—å! üòé –ß–∞—Å –¥–ª—è –∑–∞—Ç–∏—à–Ω–∏—Ö –≤–µ—á–æ—Ä—ñ–≤ ‚òï —ñ –ª–µ–≥–∫–∏—Ö –ø—Ä–æ–≥—É–ª—è–Ω–æ–∫ üåÑ."

                if rainy_days > 0:
                    conclusion += f" –ê–ª–µ —á–µ–∫–∞–π –Ω–∞ {rainy_days} –¥–æ—â–æ–≤–∏—Ö –¥–Ω—ñ–≤ üåßÔ∏è, —Ç–æ–∂ —Ç—Ä–∏–º–∞–π –ø–∞—Ä–∞—Å–æ–ª—å–∫—É –Ω–∞–ø–æ–≥–æ—Ç–æ–≤—ñ! ‚òÇÔ∏è"
                else:
                    conclusion += " –°–æ–Ω—è—á–Ω–∞ –ø–æ–≥–æ–¥–∞ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–∞, –±–µ—Ä–∏ —Å–æ–Ω—Ü–µ–∑–∞—Ö–∏—Å–Ω–∏–π –∫—Ä–µ–º! üß¥"

                return "\n".join(lines) + "\n" + conclusion
    except aiohttp.ClientError as e:
        return f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å–µ—Ä–≤—ñ—Å—É –ø—Ä–æ–≥–Ω–æ–∑—É –ø–æ–≥–æ–¥–∏: {str(e)}"